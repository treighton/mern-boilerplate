[{"C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\index.js":"1","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\App.js":"2","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\pages\\Home.js":"3","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\utils\\auth.js":"4","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\components\\Header.js\\index.js":"5","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\components\\Navbar.js\\index.js":"6","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\components\\access\\signup.js":"7","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\components\\access\\login.js":"8","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\pages\\About.js":"9","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\pages\\LoginForm.js":"10","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\pages\\SignUp.js":"11"},{"size":269,"mtime":1678163725268,"results":"12","hashOfConfig":"13"},{"size":1357,"mtime":1678252610870,"results":"14","hashOfConfig":"13"},{"size":474,"mtime":1678251104908,"results":"15","hashOfConfig":"13"},{"size":1043,"mtime":1678156752948,"results":"16","hashOfConfig":"13"},{"size":260,"mtime":1678246436264,"results":"17","hashOfConfig":"13"},{"size":987,"mtime":1678251168759,"results":"18","hashOfConfig":"13"},{"size":3791,"mtime":1678249104795,"results":"19","hashOfConfig":"13"},{"size":2967,"mtime":1678248839370,"results":"20","hashOfConfig":"13"},{"size":108,"mtime":1678251104908,"results":"21","hashOfConfig":"13"},{"size":2656,"mtime":1678251104909,"results":"22","hashOfConfig":"13"},{"size":1161,"mtime":1678251289026,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1hpr4yt",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\index.js",[],["50","51"],"C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\App.js",[],"C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\pages\\Home.js",["52","53"],"C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\utils\\auth.js",["54"],"import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"id_token\");\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    localStorage.setItem(\"id_token\", idToken);\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"id_token\");\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\components\\Header.js\\index.js",[],"C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\components\\Navbar.js\\index.js",["55","56"],"C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\components\\access\\signup.js",["57","58"],"import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { useMutation} from \"@apollo/client\";\r\n//import signup mutation when available\r\nimport Auth from '../../utils/auth';\r\nimport \"./access.css\"\r\nconst SignupForm = () => {\r\n  // set initial form state\r\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(false);\r\n//insert signup mutation here when available\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n        //plug in mutation when available\r\n    //   //const response = await createUser(userFormData);\r\n\r\n    //   if (!response.ok) {\r\n    //     throw new Error('something went wrong!');\r\n    //   }\r\n\r\n    //   const { token, user } = await response.json();\r\n    //   console.log(user);\r\n      //Auth.login(token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <div className=\"accessbox2\">\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your signup!\r\n        </Alert>\r\n\r\n        <Form.Group style={{margin: \"20px\", padding: \"15px\"}} >\r\n          <Form.Label htmlFor='username'>Username</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your username'\r\n            name='username'\r\n            onChange={handleInputChange}\r\n            value={userFormData.username}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group style={{margin: \"20px\", padding: \"15px\"}}  >\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Your email address'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group style={{margin: \"20px\", padding: \"15px\"}} >\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n        style={{marginRight: \"auto\", marginLeft: \"auto\"}}\r\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\components\\access\\login.js",["59","60"],"import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { useMutation } from '@apollo/client';\r\nimport Auth from '../../utils/auth';\r\nimport \"./access.css\"\r\n//import mutation when available\r\nconst Login = () => {\r\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n//create mutation variable when available\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n        //plug in login mutation when available\r\n    //   const response = await loginUser(userFormData);\r\n\r\n    //   if (!response.ok) {\r\n    //     throw new Error('something went wrong!');\r\n    //   }\r\n\r\n    //   const { token, user } = await response.json();\r\n    //   console.log(user);\r\n     // Auth.login(token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className='accessbox'>\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your login credentials!\r\n        </Alert>\r\n        <Form.Group style={{margin: \"20px\", padding: \"15px\"}}>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your email'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group style={{margin: \"20px\", padding: \"15px\"}}>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\pages\\About.js",[],"C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\pages\\LoginForm.js",["61"],"C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\pages\\SignUp.js",["62","63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":14},{"ruleId":"69","severity":1,"message":"73","line":11,"column":22,"nodeType":"71","messageId":"72","endLine":11,"endColumn":33},{"ruleId":"74","severity":1,"message":"75","line":41,"column":1,"nodeType":"76","endLine":41,"endColumn":34},{"ruleId":"69","severity":1,"message":"73","line":11,"column":22,"nodeType":"71","messageId":"72","endLine":11,"endColumn":33},{"ruleId":"69","severity":1,"message":"77","line":12,"column":11,"nodeType":"71","messageId":"72","endLine":12,"endColumn":23},{"ruleId":"69","severity":1,"message":"78","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":21},{"ruleId":"69","severity":1,"message":"79","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":12},{"ruleId":"69","severity":1,"message":"78","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":21},{"ruleId":"69","severity":1,"message":"79","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":12},{"ruleId":"69","severity":1,"message":"79","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":12},{"ruleId":"69","severity":1,"message":"80","line":7,"column":3,"nodeType":"71","messageId":"72","endLine":7,"endColumn":7},{"ruleId":"69","severity":1,"message":"81","line":8,"column":3,"nodeType":"71","messageId":"72","endLine":8,"endColumn":14},{"ruleId":"69","severity":1,"message":"79","line":11,"column":8,"nodeType":"71","messageId":"72","endLine":11,"endColumn":12},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'setLoggedIn' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'handleLogout' is assigned a value but never used.","'useMutation' is defined but never used.","'Auth' is defined but never used.","'Card' is defined but never used.","'CardColumns' is defined but never used.","no-global-assign","no-unsafe-negation"]