[{"C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\index.js":"1","C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\App.js":"2","C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\pages\\Home.js":"3","C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\pages\\LoginForm.js":"4","C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\pages\\About.js":"5","C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\pages\\SignUp.js":"6","C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\components\\access\\login.js":"7","C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\components\\access\\signup.js":"8","C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\components\\Header.js\\index.js":"9","C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\utils\\auth.js":"10","C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\components\\Navbar.js\\index.js":"11"},{"size":269,"mtime":1678317469187,"results":"12","hashOfConfig":"13"},{"size":1357,"mtime":1678253770815,"results":"14","hashOfConfig":"13"},{"size":474,"mtime":1678253770825,"results":"15","hashOfConfig":"13"},{"size":2656,"mtime":1678253770825,"results":"16","hashOfConfig":"13"},{"size":108,"mtime":1678253770824,"results":"17","hashOfConfig":"13"},{"size":1161,"mtime":1678253770827,"results":"18","hashOfConfig":"13"},{"size":2873,"mtime":1678253770819,"results":"19","hashOfConfig":"13"},{"size":3677,"mtime":1678253770820,"results":"20","hashOfConfig":"13"},{"size":260,"mtime":1678253770816,"results":"21","hashOfConfig":"13"},{"size":1043,"mtime":1678254088678,"results":"22","hashOfConfig":"13"},{"size":987,"mtime":1678253770817,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11oysuo",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\index.js",[],"C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\App.js",[],"C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\pages\\Home.js",["53","54"],"import React, { useState } from 'react';\nimport Header from '../components/Header.js';\nimport Auth from '../utils/auth';\n\n// Need Importations\n\n// Need importations\n\n// Code incomplete \nconst Home = () => {\n    const [loggedIn, setLoggedIn] = useState(Auth.loggedIn());\n    // return loggedIn ?  {\n    //   fetchPolicy: \"no-cache\"\n    // }\n    return !loggedIn && ( // remove bang (!) operator\n      <>\n        <h1>Home</h1>\n        \n      </>\n    )\n}  \n\nexport default Home","C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\pages\\LoginForm.js",["55"],"// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\n// import { loginUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    // try {\n    //   const response = await loginUser(userFormData);\n\n    //   if (!response.ok) {\n    //     throw new Error('something went wrong!');\n    //   }\n\n    //   const { token, user } = await response.json();\n    //   console.log(user);\n    //   Auth.login(token);\n    // } catch (err) {\n    //   console.error(err);\n    //   setShowAlert(true);\n    // }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\pages\\About.js",[],"C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\pages\\SignUp.js",["56","57","58"],"import {\n  Jumbotron,\n  Container,\n  Col,\n  Form,\n  Button,\n  Card,\n  CardColumns,\n} from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport Auth from \"../utils/auth\";\n\nconst handleFormSubmit = (e) => {\n  console.log(e.target)\n}\n\n\nconst Signup = () => {\n  const [ searchInput, setSearchInput ] = useState ()\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>sign Up</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name=\"searchInput\"\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  size=\"lg\"\n                  placeholder=\"Sign Up\"\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type=\"submit\" variant=\"success\" size=\"lg\">\n                  Creat Account\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n    </>\n  );\n};\n\nexport default Signup;\n","C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\components\\access\\login.js",["59","60"],"import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../../utils/auth';\nimport \"./access.css\"\n//import mutation when available\nconst Login = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n//create mutation variable when available\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n        //plug in login mutation when available\n    //   const response = await loginUser(userFormData);\n\n    //   if (!response.ok) {\n    //     throw new Error('something went wrong!');\n    //   }\n\n    //   const { token, user } = await response.json();\n    //   console.log(user);\n     // Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n    <div className='accessbox'>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group style={{margin: \"20px\", padding: \"15px\"}}>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group style={{margin: \"20px\", padding: \"15px\"}}>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\components\\access\\signup.js",["61","62"],"import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation} from \"@apollo/client\";\n//import signup mutation when available\nimport Auth from '../../utils/auth';\nimport \"./access.css\"\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n//insert signup mutation here when available\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n        //plug in mutation when available\n    //   //const response = await createUser(userFormData);\n\n    //   if (!response.ok) {\n    //     throw new Error('something went wrong!');\n    //   }\n\n    //   const { token, user } = await response.json();\n    //   console.log(user);\n      //Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <div className=\"accessbox2\">\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group style={{margin: \"20px\", padding: \"15px\"}} >\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group style={{margin: \"20px\", padding: \"15px\"}}  >\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group style={{margin: \"20px\", padding: \"15px\"}} >\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n        style={{marginRight: \"auto\", marginLeft: \"auto\"}}\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n      </div>\n    </>\n  );\n};\n\nexport default SignupForm;\n","C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\components\\Header.js\\index.js",[],"C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\utils\\auth.js",["63"],"import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"id_token\");\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    localStorage.setItem(\"id_token\", idToken);\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"id_token\");\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\Ramin\\Desktop\\Projects\\puppy-play-date\\client\\src\\components\\Navbar.js\\index.js",["64","65"],"import React, { useState } from 'react';\nimport {Link} from \"react-router-dom\";\nimport Auth from '../../utils/auth';\nimport { useNavigate } from \"react-router-dom\";\nimport './style.css'\n\n\n\nconst Navbar = () => {\n    let navigate = useNavigate();\n    const [loggedIn, setLoggedIn] = useState(Auth.loggedIn());\n    const handleLogout = () => {\n        Auth.logout () \n        \n    }\n    return (\n    <nav className='nav'>\n        <ul className='nav__ul'>\n            <li onClick={() => navigate('/')} className='nav__li'>\n                Home \n            </li>\n            <li onClick={() => navigate('/about')} className='nav__li'>\n               About\n            </li>\n            {!loggedIn && (\n            <a href=\"/login\"><li className='nav__li navlink'>\n                Log in\n            </li></a>\n            )}\n            <Link to=\"/signup\"><li className='nav__li navlink'>\n                Sign up\n            </li></Link>\n        </ul>\n    </nav>\n  )\n}\n\nexport default Navbar",{"ruleId":"66","severity":1,"message":"67","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":14},{"ruleId":"66","severity":1,"message":"70","line":11,"column":22,"nodeType":"68","messageId":"69","endLine":11,"endColumn":33},{"ruleId":"66","severity":1,"message":"71","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":12},{"ruleId":"66","severity":1,"message":"72","line":7,"column":3,"nodeType":"68","messageId":"69","endLine":7,"endColumn":7},{"ruleId":"66","severity":1,"message":"73","line":8,"column":3,"nodeType":"68","messageId":"69","endLine":8,"endColumn":14},{"ruleId":"66","severity":1,"message":"71","line":11,"column":8,"nodeType":"68","messageId":"69","endLine":11,"endColumn":12},{"ruleId":"66","severity":1,"message":"74","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":21},{"ruleId":"66","severity":1,"message":"71","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":12},{"ruleId":"66","severity":1,"message":"74","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":21},{"ruleId":"66","severity":1,"message":"71","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":12},{"ruleId":"75","severity":1,"message":"76","line":41,"column":1,"nodeType":"77","endLine":41,"endColumn":34},{"ruleId":"66","severity":1,"message":"70","line":11,"column":22,"nodeType":"68","messageId":"69","endLine":11,"endColumn":33},{"ruleId":"66","severity":1,"message":"78","line":12,"column":11,"nodeType":"68","messageId":"69","endLine":12,"endColumn":23},"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'setLoggedIn' is assigned a value but never used.","'Auth' is defined but never used.","'Card' is defined but never used.","'CardColumns' is defined but never used.","'useMutation' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'handleLogout' is assigned a value but never used."]
