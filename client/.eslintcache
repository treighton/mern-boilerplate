[{"/Users/eugenedostoevsky/Desktop/Homework/puppy-play-date/client/src/index.js":"1","/Users/eugenedostoevsky/Desktop/Homework/puppy-play-date/client/src/App.js":"2","/Users/eugenedostoevsky/Desktop/Homework/puppy-play-date/client/src/pages/Home.js":"3","/Users/eugenedostoevsky/Desktop/Homework/puppy-play-date/client/src/utils/auth.js":"4","/Users/eugenedostoevsky/Desktop/Homework/puppy-play-date/client/src/components/Header.js/index.js":"5","/Users/eugenedostoevsky/Desktop/Homework/puppy-play-date/client/src/components/Navbar.js/index.js":"6","/Users/eugenedostoevsky/Desktop/Homework/puppy-play-date/client/src/pages/About.js":"7","/Users/eugenedostoevsky/Desktop/Homework/puppy-play-date/client/src/pages/SignUp.js":"8","/Users/eugenedostoevsky/Desktop/Homework/puppy-play-date/client/src/pages/LoginForm.js":"9"},{"size":269,"mtime":1678157006065,"results":"10","hashOfConfig":"11"},{"size":1127,"mtime":1678240648060,"results":"12","hashOfConfig":"11"},{"size":474,"mtime":1678238521198,"results":"13","hashOfConfig":"11"},{"size":1043,"mtime":1678154471795,"results":"14","hashOfConfig":"11"},{"size":238,"mtime":1678156907573,"results":"15","hashOfConfig":"11"},{"size":1085,"mtime":1678242059744,"results":"16","hashOfConfig":"11"},{"size":108,"mtime":1678238232859,"results":"17","hashOfConfig":"11"},{"size":1161,"mtime":1678239569537,"results":"18","hashOfConfig":"11"},{"size":2656,"mtime":1678240735602,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"217dk2",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/Users/eugenedostoevsky/Desktop/Homework/puppy-play-date/client/src/index.js",[],["44","45"],"/Users/eugenedostoevsky/Desktop/Homework/puppy-play-date/client/src/App.js",[],"/Users/eugenedostoevsky/Desktop/Homework/puppy-play-date/client/src/pages/Home.js",["46","47"],"import React, { useState } from 'react';\nimport Header from '../components/Header.js';\nimport Auth from '../utils/auth';\n\n// Need Importations\n\n// Need importations\n\n// Code incomplete \nconst Home = () => {\n    const [loggedIn, setLoggedIn] = useState(Auth.loggedIn());\n    // return loggedIn ?  {\n    //   fetchPolicy: \"no-cache\"\n    // }\n    return !loggedIn && ( // remove bang (!) operator\n      <>\n        <h1>Home</h1>\n        \n      </>\n    )\n}  \n\nexport default Home","/Users/eugenedostoevsky/Desktop/Homework/puppy-play-date/client/src/utils/auth.js",["48"],"import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"id_token\");\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    localStorage.setItem(\"id_token\", idToken);\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"id_token\");\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","/Users/eugenedostoevsky/Desktop/Homework/puppy-play-date/client/src/components/Header.js/index.js",[],"/Users/eugenedostoevsky/Desktop/Homework/puppy-play-date/client/src/components/Navbar.js/index.js",["49"],"import React, { useState } from 'react';\nimport Auth from '../../utils/auth';\nimport { useNavigate } from \"react-router-dom\";\nimport './style.css'\n\n\n\nconst Navbar = () => {\n    let navigate = useNavigate();\n    const [loggedIn, setLoggedIn] = useState(Auth.loggedIn());\n    const handleLogout = () => {\n        Auth.logout () \n        \n    }\n    return (\n    <nav className='nav'>\n        <ul className='nav__ul'>\n            <li onClick={() => navigate('/')} className='nav__li'>\n                Home \n            </li>\n            <li onClick={() => navigate('/about')} className='nav__li'>\n               About\n            </li>\n            { !loggedIn && (<li onClick={() => navigate('/signup')} className='nav__li'>\n               Signup\n            </li>)}\n            {!loggedIn && (<li onClick={() => navigate('/login')} className='nav__li'>\n                Log in\n            </li>)}\n            { loggedIn && (<li onClick={() => handleLogout ()} className='nav__li'>\n               Logout\n            </li>)}\n            \n        </ul>\n    </nav>\n  )\n}\n\nexport default Navbar","/Users/eugenedostoevsky/Desktop/Homework/puppy-play-date/client/src/pages/About.js",[],"/Users/eugenedostoevsky/Desktop/Homework/puppy-play-date/client/src/pages/SignUp.js",["50","51","52"],"import {\n  Jumbotron,\n  Container,\n  Col,\n  Form,\n  Button,\n  Card,\n  CardColumns,\n} from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport Auth from \"../utils/auth\";\n\nconst handleFormSubmit = (e) => {\n  console.log(e.target)\n}\n\n\nconst Signup = () => {\n  const [ searchInput, setSearchInput ] = useState ()\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>sign Up</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name=\"searchInput\"\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  size=\"lg\"\n                  placeholder=\"Sign Up\"\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type=\"submit\" variant=\"success\" size=\"lg\">\n                  Creat Account\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n    </>\n  );\n};\n\nexport default Signup;\n","/Users/eugenedostoevsky/Desktop/Homework/puppy-play-date/client/src/pages/LoginForm.js",["53"],"// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\n// import { loginUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    // try {\n    //   const response = await loginUser(userFormData);\n\n    //   if (!response.ok) {\n    //     throw new Error('something went wrong!');\n    //   }\n\n    //   const { token, user } = await response.json();\n    //   console.log(user);\n    //   Auth.login(token);\n    // } catch (err) {\n    //   console.error(err);\n    //   setShowAlert(true);\n    // }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":14},{"ruleId":"58","severity":1,"message":"62","line":11,"column":22,"nodeType":"60","messageId":"61","endLine":11,"endColumn":33},{"ruleId":"63","severity":1,"message":"64","line":41,"column":1,"nodeType":"65","endLine":41,"endColumn":34},{"ruleId":"58","severity":1,"message":"62","line":10,"column":22,"nodeType":"60","messageId":"61","endLine":10,"endColumn":33},{"ruleId":"58","severity":1,"message":"66","line":7,"column":3,"nodeType":"60","messageId":"61","endLine":7,"endColumn":7},{"ruleId":"58","severity":1,"message":"67","line":8,"column":3,"nodeType":"60","messageId":"61","endLine":8,"endColumn":14},{"ruleId":"58","severity":1,"message":"68","line":11,"column":8,"nodeType":"60","messageId":"61","endLine":11,"endColumn":12},{"ruleId":"58","severity":1,"message":"68","line":6,"column":8,"nodeType":"60","messageId":"61","endLine":6,"endColumn":12},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'setLoggedIn' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'Card' is defined but never used.","'CardColumns' is defined but never used.","'Auth' is defined but never used.","no-global-assign","no-unsafe-negation"]
