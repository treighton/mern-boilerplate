[{"C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\index.js":"1","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\App.js":"2","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\pages\\Home.js":"3","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\utils\\auth.js":"4","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\components\\Header.js\\index.js":"5","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\components\\Navbar.js\\index.js":"6","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\components\\access\\signup.js":"7","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\components\\access\\login.js":"8","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\pages\\About.js":"9","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\pages\\LoginForm.js":"10","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\pages\\SignUp.js":"11"},{"size":269,"mtime":1678163725268,"results":"12","hashOfConfig":"13"},{"size":1357,"mtime":1678252610870,"results":"14","hashOfConfig":"13"},{"size":474,"mtime":1678251104908,"results":"15","hashOfConfig":"13"},{"size":1043,"mtime":1678156752948,"results":"16","hashOfConfig":"13"},{"size":260,"mtime":1678246436264,"results":"17","hashOfConfig":"13"},{"size":987,"mtime":1678251168759,"results":"18","hashOfConfig":"13"},{"size":3791,"mtime":1678249104795,"results":"19","hashOfConfig":"13"},{"size":2967,"mtime":1678248839370,"results":"20","hashOfConfig":"13"},{"size":108,"mtime":1678251104908,"results":"21","hashOfConfig":"13"},{"size":2656,"mtime":1678251104909,"results":"22","hashOfConfig":"13"},{"size":1161,"mtime":1678251289026,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1hpr4yt",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\index.js",[],["54","55"],"C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\App.js",[],"C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\pages\\Home.js",["56","57"],"import React, { useState } from 'react';\nimport Header from '../components/Header.js';\nimport Auth from '../utils/auth';\n\n// Need Importations\n\n// Need importations\n\n// Code incomplete \nconst Home = () => {\n    const [loggedIn, setLoggedIn] = useState(Auth.loggedIn());\n    // return loggedIn ?  {\n    //   fetchPolicy: \"no-cache\"\n    // }\n    return !loggedIn && ( // remove bang (!) operator\n      <>\n        <h1>Home</h1>\n        \n      </>\n    )\n}  \n\nexport default Home","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\utils\\auth.js",["58"],"import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"id_token\");\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    localStorage.setItem(\"id_token\", idToken);\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"id_token\");\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\components\\Header.js\\index.js",[],"C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\components\\Navbar.js\\index.js",["59","60"],"import React, { useState } from 'react';\nimport {Link} from \"react-router-dom\";\nimport Auth from '../../utils/auth';\nimport { useNavigate } from \"react-router-dom\";\nimport './style.css'\n\n\n\nconst Navbar = () => {\n    let navigate = useNavigate();\n    const [loggedIn, setLoggedIn] = useState(Auth.loggedIn());\n    const handleLogout = () => {\n        Auth.logout () \n        \n    }\n    return (\n    <nav className='nav'>\n        <ul className='nav__ul'>\n            <li onClick={() => navigate('/')} className='nav__li'>\n                Home \n            </li>\n            <li onClick={() => navigate('/about')} className='nav__li'>\n               About\n            </li>\n            {!loggedIn && (\n            <a href=\"/login\"><li className='nav__li navlink'>\n                Log in\n            </li></a>\n            )}\n            <Link to=\"/signup\"><li className='nav__li navlink'>\n                Sign up\n            </li></Link>\n        </ul>\n    </nav>\n  )\n}\n\nexport default Navbar","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\components\\access\\signup.js",["61","62"],"import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { useMutation} from \"@apollo/client\";\r\n//import signup mutation when available\r\nimport Auth from '../../utils/auth';\r\nimport \"./access.css\"\r\nconst SignupForm = () => {\r\n  // set initial form state\r\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(false);\r\n//insert signup mutation here when available\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n        //plug in mutation when available\r\n    //   //const response = await createUser(userFormData);\r\n\r\n    //   if (!response.ok) {\r\n    //     throw new Error('something went wrong!');\r\n    //   }\r\n\r\n    //   const { token, user } = await response.json();\r\n    //   console.log(user);\r\n      //Auth.login(token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <div className=\"accessbox2\">\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your signup!\r\n        </Alert>\r\n\r\n        <Form.Group style={{margin: \"20px\", padding: \"15px\"}} >\r\n          <Form.Label htmlFor='username'>Username</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your username'\r\n            name='username'\r\n            onChange={handleInputChange}\r\n            value={userFormData.username}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group style={{margin: \"20px\", padding: \"15px\"}}  >\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Your email address'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group style={{margin: \"20px\", padding: \"15px\"}} >\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n        style={{marginRight: \"auto\", marginLeft: \"auto\"}}\r\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\components\\access\\login.js",["63","64"],"import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { useMutation } from '@apollo/client';\r\nimport Auth from '../../utils/auth';\r\nimport \"./access.css\"\r\n//import mutation when available\r\nconst Login = () => {\r\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n//create mutation variable when available\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n        //plug in login mutation when available\r\n    //   const response = await loginUser(userFormData);\r\n\r\n    //   if (!response.ok) {\r\n    //     throw new Error('something went wrong!');\r\n    //   }\r\n\r\n    //   const { token, user } = await response.json();\r\n    //   console.log(user);\r\n     // Auth.login(token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className='accessbox'>\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your login credentials!\r\n        </Alert>\r\n        <Form.Group style={{margin: \"20px\", padding: \"15px\"}}>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your email'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group style={{margin: \"20px\", padding: \"15px\"}}>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\pages\\About.js",[],"C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\pages\\LoginForm.js",["65"],"// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\n// import { loginUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    // try {\n    //   const response = await loginUser(userFormData);\n\n    //   if (!response.ok) {\n    //     throw new Error('something went wrong!');\n    //   }\n\n    //   const { token, user } = await response.json();\n    //   console.log(user);\n    //   Auth.login(token);\n    // } catch (err) {\n    //   console.error(err);\n    //   setShowAlert(true);\n    // }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","C:\\Users\\shayn\\Desktop\\bootcamp\\puppy-play-date\\client\\src\\pages\\SignUp.js",["66","67","68"],"import {\n  Jumbotron,\n  Container,\n  Col,\n  Form,\n  Button,\n  Card,\n  CardColumns,\n} from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport Auth from \"../utils/auth\";\n\nconst handleFormSubmit = (e) => {\n  console.log(e.target)\n}\n\n\nconst Signup = () => {\n  const [ searchInput, setSearchInput ] = useState ()\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>sign Up</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name=\"searchInput\"\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  size=\"lg\"\n                  placeholder=\"Sign Up\"\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type=\"submit\" variant=\"success\" size=\"lg\">\n                  Creat Account\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n    </>\n  );\n};\n\nexport default Signup;\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":14},{"ruleId":"73","severity":1,"message":"77","line":11,"column":22,"nodeType":"75","messageId":"76","endLine":11,"endColumn":33},{"ruleId":"78","severity":1,"message":"79","line":41,"column":1,"nodeType":"80","endLine":41,"endColumn":34},{"ruleId":"73","severity":1,"message":"77","line":11,"column":22,"nodeType":"75","messageId":"76","endLine":11,"endColumn":33},{"ruleId":"73","severity":1,"message":"81","line":12,"column":11,"nodeType":"75","messageId":"76","endLine":12,"endColumn":23},{"ruleId":"73","severity":1,"message":"82","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":21},{"ruleId":"73","severity":1,"message":"83","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":12},{"ruleId":"73","severity":1,"message":"82","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":21},{"ruleId":"73","severity":1,"message":"83","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":12},{"ruleId":"73","severity":1,"message":"83","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":12},{"ruleId":"73","severity":1,"message":"84","line":7,"column":3,"nodeType":"75","messageId":"76","endLine":7,"endColumn":7},{"ruleId":"73","severity":1,"message":"85","line":8,"column":3,"nodeType":"75","messageId":"76","endLine":8,"endColumn":14},{"ruleId":"73","severity":1,"message":"83","line":11,"column":8,"nodeType":"75","messageId":"76","endLine":11,"endColumn":12},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'setLoggedIn' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'handleLogout' is assigned a value but never used.","'useMutation' is defined but never used.","'Auth' is defined but never used.","'Card' is defined but never used.","'CardColumns' is defined but never used.","no-global-assign","no-unsafe-negation"]